rend <- c(60, 70, 77, 86, 91)
temp <- c(40, 45, 50, 55, 60)
ls()
plot(rend ~ temp)
lm(rend ~ temp)
lm(rend ~ temp)
mod1 <- lm(rend ~ temp)
summary(mod1)
names(mod1)
mod1$coefficients
mod1$coefficients[2]
mod1$residuals
mod1$fitted.valeus
rend
mod1$fitted.values
plot(mod1$fitted.values~temp,
type="1",
col="blue")
points(rend~temp,
col = "red"
pch = 19)
points(rend~temp,
col = "red",
pch = 19)
plot(mod1$fitted.values~temp,
type="l",
col="blue")
points(rend~temp,
col = "red",
pch = 19)
ren2 <- c(24,40,60,70,77,86,91,86,84)
tem2 = c(30,35,40,45,50,55,60,65,70)
ls()
plot(rend2~temp2)
rend2 <- c(24,40,60,70,77,86,91,86,84)
plot(rend2~temp2)
temp2 = c(30,35,40,45,50,55,60,65,70)
plot(rend2~temp2)
mod2 <- lm(rend2~temp2)
summay(mod2)
summary(mod2)
mod2$residuals
plot(mod2$residuals~temp2)
abline(h=0, lty="dashed")
plot(mod1$residuals~temp)
abline(h=0, lty="dashed")
mod3 <- lm(rend~temp2+I(temp2^2))
summary(mod3)
mod3 <- lm(rend2~temp2+I(temp2^2))
summary(mod3)
load("M:/FabricaChocolates.RData")
View(FabricaChocolates)
colnames(FabricaChocolates)[5]<-"ferias"
`colnames(FabricaChocolates)[5]<-"inferias"
`colnames(FabricaChocolates)[8]<-"inferias"
colnames(FabricaChocolates)[8]<-"inferias"
load("~/TADS_x_semestre/metodos quantitativos/resEnergy.Rdata")
install.packages("car")
install.packages("dplyr")
load("resEnergy.Rdata")
load('resEnergy.Rdata')
en <- read.csv("C:\Users\ALN\Documents\TADS_x_semestre\metodos quantitativos\resEnergy.Rdata", sep="")
en <- read.csv("\Users\ALN\Documents\TADS_x_semestre\metodos quantitativos\resEnergy.Rdata", sep="")
en <- read.csv("~\Users\ALN\Documents\TADS_x_semestre\metodos quantitativos\resEnergy.Rdata", sep="")
setwd("C:/Users/ALN/Downloads")
setwd("C:/Users/ALN/Documents/TADS_x_semestre/metodos quantitativos")
en <- read.csv("resEnergy.Rdata", sep="")
en <- read.csv("resEnergy.Rdata")
load("resEnergy.Rdata")
# 1. inspeção dos dados
str(resEnergy.Rdata)
# 1. inspeção dos dados
str(resEnergy)
head(resEnergy)
# Elabore um grafico pontos com os valores de temp no eixo horizontal
# e electricity no eixo vertical
ggplot(resEnergy,aes(x=temp,y=eletricity))
# Elabore um grafico pontos com os valores de temp no eixo horizontal
# e electricity no eixo vertical
ggplot(resEnergy,aes(x=temp,y=eletricity))+geom_point()
install.packages("ggplot2")
# Elabore um grafico pontos com os valores de temp no eixo horizontal
# e electricity no eixo vertical
ggplot(resEnergy,aes(x=temp,y=eletricity))+geom_point()
# Elabore um grafico pontos com os valores de temp no eixo horizontal
# e electricity no eixo vertical
library(ggplot2)
ggplot(resEnergy,aes(x=temp,y=eletricity))+geom_point()
ggplot(resEnergy,aes(x = temp , y=electricity)) + geom_point()
# Importa dados do diretório de trabalho
consRenda <- read.csv("consRenda.txt", sep="")
# Inspeção dos dados
str(consRenda)
head(consRenda)
# Criar matrizes e vetores
y <- as.matrix(resEnergy$temp)
y
X <- as.matrix(resEnergy$electricity)
x
X
uns <- rep(1, dim(X)[1]) # vetor de uns
X <- cbind2(uns,X)
X
uns
vetor <- rep(1, dim(X)[1])
X <- cbind2(vetor,X)
clear
# Criar matrizes e vetores
y <- as.matrix(resEnergy$temp)
y
X <- as.matrix(resEnergy$electricity)
X
vetor <- rep(1, dim(X)[1])
X <- cbind2(vetor,X)
# Criar matrizes e vetores
y <- as.matrix(resEnergy$temp)
y
X <- as.matrix(resEnergy$electricity)
X
vetor <- rep(1, dim(X)[1])
vetor
X <- cbind2(vetor,X)
X
# Estimar Beta
beta <- solve(t(X)%*%X)%*%t(X)%*%y
beta
# Valores projetados (ajustados)
adj <- X %*% beta
adj
#Resíduos
res <- y - adj
res
# Variância
var1 <- dim(X)[1]
var1
var2 <- dim(X)[2]
var2
#Variância do beta
res2 <- (1/(var1-var2))*as.numeric(t(res)%*%res)
res2
#Variância do beta
res2 <- (1/(var1-var2))*as.numeric(t(res)%*%res)
res2
vRes <- res2*(solve(t(X)%*%X))
vRes
vbt <- diag(vRes)
vbt
# Estimar Beta
beta <- solve(t(X)%*%X)%*%t(X)%*%y
beta
# Criar matrizes e vetores
y <- as.matrix(resEnergy$electricity)
y
X <- as.matrix(resEnergy$temp)
X
vetor <- rep(1, dim(X)[1])
vetor
X <- cbind2(vetor,X)
X
# Estimar Beta
beta <- solve(t(X)%*%X)%*%t(X)%*%y
beta
# Valores projetados (ajustados)
adj <- X %*% beta
adj
# Resíduos
res <- y - adj
res
# Variância
var1 <- dim(X)[1]
var1
var2 <- dim(X)[2]
var2
#Variância do beta
res2 <- (1/(var1-var2))*as.numeric(t(res)%*%res)
res2
vRes <- res2*(solve(t(X)%*%X))
vRes
vbt <- diag(vRes)
vbt
